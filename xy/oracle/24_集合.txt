集合
select * from emp;     14元素，每个元素有8个列

交集intersection

2.集合操作有　并，交，差　３种运算。

　union :得到两个查询结果的并集，并且自动去掉重复行。会排序,按第一列

　union all:得到两个查询结果的并集，不会去掉重复行。不会排序，速度就快了

　intersect:得到两个查询结果的交集，并且按照结果集的第一个列进行排序

　minus:得到两个查询结果的减集，以第一列进行排序


   集合操作

并集 union /union all        1  2     union 2 3         =1 2 3 
交集 INTERSECT               1 2 3  intersect 1 3 5  = 1 3 
补集 MINUS                       1 2 3  minus 1 2         =3

＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝

例子：

　　下面是两个表：一个主修课程表，一个选修课程表。

这个是主修课程表：minors

　　create table minors(
       　minor_id number primary key,
      　 minor_name varchar2(30) not null,
       　credit_hour number(2)
   　 );

插入３条记录：　　　　　　　　　　　　　　　

　　insert into minors values(10101,'计算机原理',4);
    insert into minors values(10201,'自动控制原理',3);
    insert into minors values(10301,'工程制图原理',4);

下面创建选修课程表minors2
　create table minors2(
       minor_id number primary key,
       minor_name varchar2(30) not null,
       credit_hour number(2)
    );
     插入两条记录：
    insert into minors2 values(10201,'自动控制原理',3);
    insert into minors2 values(10301,'工程制图原理',4);
    insert into minors2 values(10001,'数学',4);
    insert into minors2 values(10000,'语文',4); 

最后:commit

--------------------

>select * from minors  
    union /union all/minus/intersect
    select * from minors2

两个表使用intersect　:得到如下结果

   select minor_id,minor_name,credit_hour from minors 
   intersect 
   select minor_id,minor_name,credit_hour from minors2

结果：

MINOR_ID MINOR_NAME                     CREDIT_HOUR
---------- ------------------------------ -----------
     10201 自动控制原理                             3
     10301 工程制图原理                             4

两个表使用minus　:得到如下结果

select minor_id,minor_name,credit_hour from minors 
minus 
select minor_id,minor_name,credit_hour from minors2

结果：

MINOR_ID MINOR_NAME                     CREDIT_HOUR
--------------------
scott
  SQL> create table emp2 as select * from emp;
  SQL> insert into emp2(empno,ename) values(8899,'hellp');
        >  commit;
 >select * from emp  union  union /union all/minus/intersect    select * from emp2;  不同集合的结果。

****************************************************************************************************
集合举例说明：
SQL> select * from t1;

        ID NAME
---------- ----------
         1 zhongguo
         2 meiguo
         3 deguo

SQL> select * from t2;

        ID NAME
---------- ----------
         3 deguo
         4 yinguo

SQL> select * from t1 union select * from t2;         union =并集
                                    将 t1 的结果和 t2 的结果联合显示。含有排序操作，也去掉重复的行。
        ID NAME
---------- ----------
         1 zhongguo
         2 meiguo
         3 deguo
         4 yinguo

SQL> select * from t1 union all select * from t2;      union all=不去重，不排序的并集
                                    将 t1 的结果和 t2 的结果联合显示。不排序操作，也不去掉重复的行。
        ID NAME
---------- ----------
         1 zhongguo
         2 meiguo
         3 deguo
         3 deguo
         4 yinguo

SQL> select * from t1 intersect select * from t2;      intersect=交集

        ID NAME                    将 t1 的结果和 t2 的结果的共有部分显示。含有排序操作，也去掉重复的行。
---------- ----------
         3 deguo

SQL> select * from t1 minus select * from t2;   minus＝补集 ：T1 表有，而 t2 表没有的行，去掉重复的行。

        ID NAME
---------- ----------
         1 zhongguo
         2 meiguo

SQL> select * from t2 minus select * from t1;

        ID NAME
---------- ----------
         4 yinguo

SQL> 


