消息发送流程

fpId
Encrypt
Status
Type   8免费短信
MessageID
From
To
version 可选
serverKey 可选项
Index  可选-群消息时消息的发送者

我也看了jwt了， 我觉得你说的几个问题并不全是问题
1. 除了签名外，其他的都是可被破解，相当于明文
	这个问题我觉得是head,payload并不是要保密的，不要放敏感信息就好了，他俩存在的作用是和server解密签名后做对比的，看是否被修改了
	本来可以不传这2个header的，他们本来要放在服务端，但是这样增加服务端的存储压力，所以放在客户端上传上来，server再做鉴定
2. token过期问题
	每次做checkcredential的时候就下发一个新的token，所以设置每个token的有效期在5分钟以内就能满足业务需求
3. token被窃取后的冒用问题
	官方文档上说了，要注意防止出现安全问题， 所以他的意思是需要使用者自己考虑安全问题。
	https下使用应该不会被窃取，如果被窃取了，确实有问题，因为不放敏感信息就无法确认用户身份，任何userid都可以使用，就是说你可以通过修改http中
	from的值操作别人的账户.
	
倒是可以参考他的思想，自己弄一个token， 自己加密，checkredential的时候下发给客户端， 客户端发http请求的时候传上来，server解析
这个时候其他人窃取到也没用，解不开，只要http请求中的from头和token里的userid不匹配则鉴权失败

-----------------------------------------------------------------------------
消息流程

MSC服务
############

USER A---> USER B 发消息

1. 判断是否为加密消息--加密则解密
	循环遍历所有body，解密
2. 是否为免费短信
	2.1 是免费短信
		同步免费短信--直接同步给当前在线客户端
		单发
		群发

	2.2 不是免费短信--普通消息
		群发
			重发消息
			即时消息
		二人
			重发消息
				如果数据库有该消息--直接给客户端返回应答，否则走即时消息逻辑
			即时消息
				自己给自己发消息--消息入库-整个Request经过DES加密入库
				非群发，同步消息存储


				给客户端OK应答

				发送消息
					黑名单逻辑判断
						敏感词
						会话消息存储

						发消息--向所有接收方在线客户端发消息
						没有收到任何一个所有客户端的送达确认则发短信 并 对有push token的客户端发push。

离线消息
	客户端登陆成功后发获取离线消息的请求
		1. 有session会话的
		2. 无session会话的
		3. 客户端在离线状态下读取的消息，个数
############

CGC服务
############

群消息流程
将群消息进行内部信令转换
